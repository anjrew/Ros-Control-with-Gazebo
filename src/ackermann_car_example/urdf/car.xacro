<?xml version="1.0"?>
<robot name="car"
    xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Import parameters from the config files -->
    <xacro:property name="yaml_file" value="$(find ackermann_car_example)/config/car.yml" />
    <xacro:property name="props" value="${xacro.load_yaml(yaml_file)}" />
    <xacro:property name="car" value="${props['car']}" />
    <xacro:property name="chassis" value="${car['chassis']}" />
    <xacro:property name="wheel" value="${car['wheel']}" />
    <xacro:property name="tire" value="${car['tire']}" />
    <xacro:property name="axle" value="${car['axle']}" />
    <xacro:property name="steering_column" value="${car['steering_column']}" />
    <xacro:property name="lidar" value="${car['lidar']}" />
    <xacro:property name="mounts" value="${car['mounts']}" />

    <!-- Import the other macros -->
    <xacro:include filename="wheel.xacro" />

    <!-- Define IDS -->
    <xacro:property name="robot_id" value="car" />
    <xacro:property name="right_rear_id" value="right_rear" />
    <xacro:property name="left_rear_id" value="left_rear" />
    <xacro:property name="right_front_id" value="right_front" />
    <xacro:property name="left_front_id" value="right_front" />

    <!-- Robot body -->
    <link name="base_link">
        <inertial>
            <mass value="0.001"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
        </inertial>
    </link>


    <joint name="base_to_wheel" type="fixed">
        <parent link="base_link" />
        <child link="${right_rear_id}" />
        <origin xyz="${chassis.length_m/2 - chassis.wheel_x_offset_from_edge_m} 0 ${chassis.height_m/2}" />
        <axis xyz="0 0 1"/>
    </joint>

    <!-- Use the wheel macro to create a wheel -->
    <xacro:wheel id="${right_rear_id}" props="${wheel}" />

    <!-- Gazebo plugin for ROS Control -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/car</robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>

</robot>