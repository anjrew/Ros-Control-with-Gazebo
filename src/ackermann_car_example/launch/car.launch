<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="control_type" default="velocity"/>

    <!-- Load the Gazebo world file -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="true"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="true" />
        <arg name="verbose" value="true" />
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find ackermann_car_example)/urdf/car.urdf'" />

    <!-- Spawn the robot -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg control_type)_controlled_robot" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find ackermann_car_example)/config/control.yaml" command="load"/>

    <!-- Load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/car" args="joint_state_controller
    right_front_wheel_controller
    left_front_wheel_controller
    right_rear_wheel_controller
    left_rear_wheel_controller
    right_front_shock_controller
    left_front_shock_controller" />

    <!-- Convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg control_type)_controlled_robot/joint_states" />
    </node>

    <!-- Foxglove Bridge -->
    <include file="$(find foxglove_bridge)/launch/foxglove_bridge.launch" />

    <!-- Unpause the simulation -->
    <node name="unpause_gazebo" pkg="rosservice" type="rosservice" args="call --wait /gazebo/unpause_physics" />

</launch>